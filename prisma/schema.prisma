generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Wallet {
  id                  String   @id @default(uuid())
  name                String   @default("New wallet")
  publicAddress       String   @unique
  encryptedPrivateKey String
  salt                String
  passwordHash        String
  createdAt           DateTime @default(now())

  @@index([publicAddress])
}

model ApiKey {
  id        String        @id @default(uuid())
  keyHash   String
  name      String
  scopes    ApiKeyScope[]
  isActive  Boolean       @default(true)
  createdAt DateTime      @default(now())

  @@index([isActive])
}

enum ApiKeyScope {
  WALLET_READ
  WALLET_CREATE
  WALLET_TRANSFER
}

model AuditLog {
  id        String            @id @default(uuid())
  timestamp DateTime          @default(now())
  eventType AuditLogEventType
  // userId     String?
  apiKeyId  String? // We don't have a user model so lets use the api key id for now.
  ipAddress String
  userAgent String
  success   Boolean
  metadata  Json?
  createdAt DateTime          @default(now())

  @@index([eventType])
  @@index([timestamp])
  @@index([apiKeyId])
}

enum AuditLogEventType {
  WALLET_CREATION
  WALLET_READ
  WALLET_TRANSFER
  API_KEY_USAGE
  RATE_LIMIT_EXCEEDED
}
